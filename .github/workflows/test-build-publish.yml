name: Test, build and publish Golang services
on:
  push:
    branches: [main]
    tags:
      - "v*.*.*"

env:
  DOCKER_HUB_REPO: jenswbe/docker-rest-puller-restarter
  DOCKER_HUB_USER: jenswbebot
  PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

jobs:
  build-services:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Derive docker_tag
        id: vars
        shell: python
        run: |
          import os, re, sys
          tag = os.environ['GITHUB_REF'].split('/').pop()
          tags = []
          semverRegex = r"^v\d+\.\d+\.\d+$"
          if tag == 'main':
            tags = ['latest']
          elif re.match(semverRegex, tag):
            tags = ['stable', tag]
          else:
            sys.exit(f"Invalid tag {tag}. Must be main or a semver tag")
          images = []
          image_base = os.environ['DOCKER_HUB_REPO']
          images = [f"{image_base}:{t}" for t in tags]
          imagesList = ",".join(images)
          print(f"::set-output name=images::{imagesList}")

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.x"

      - name: Lint service
        uses: golangci/golangci-lint-action@v2
        with:
          skip-go-installation: true

      - name: Test exhaustive use of case statements
        run: |
          go install github.com/nishanths/exhaustive/...@latest
          exhaustive ./...

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2.8.0
        with:
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.vars.outputs.images }}

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2.4.3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ env.DOCKER_HUB_REPO }}
